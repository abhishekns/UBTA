//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _SampleLib.MyDelegate {
    using System;
    using System.ComponentModel;
    using ubta.Reflection;
    using System.Text;
    using System.Linq;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Workflow.ComponentModel;
    using System.Workflow.ComponentModel.Design;
    
    
    [Serializable()]
    [TypeConverter(typeof(ExpandableObjectConverter))]
    [Designer("ubta.UseCase.Designer.UseCaseDesigner")]
    public class BeginInvoke : ubta.UseCase.DefaultActivity {
        
        private System.Collections.Generic.Dictionary<string, System.Type> myTypeRefs;
        
        [NonSerialized()]
        private string _param1;
        
        [NonSerialized()]
        private System.AsyncCallback _callback;
        
        [NonSerialized()]
        private object _object;
        
        [NonSerialized()]
        private string _BeginInvoke_rv;
        
        public BeginInvoke() {
            _Init();
        }
        
        public BeginInvoke(System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext sc) {
            _Init();
        }
        
        [Browsable(true)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        [Description("Object of type System.String. Specify a created object reference.")]
        [Category("Parameters")]
        public virtual string param1 {
            get {
                return _param1;
            }
            set {
                if(_param1 != value)
{
object ov = _param1;
_param1 = value;
OnParametersChangedInternal("param1", ov, value);
};
            }
        }
        
        [Browsable(true)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        [Description("Object of type System.AsyncCallback. Specify a created object reference.")]
        [Category("Parameters")]
        public virtual System.AsyncCallback callback {
            get {
                return _callback;
            }
            set {
                if(_callback != value)
{
object ov = _callback;
_callback = value;
OnParametersChangedInternal("callback", ov, value);
};
            }
        }
        
        [Browsable(true)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        [Description("Object of type System.Object. Specify a created object reference.")]
        [Category("Parameters")]
        public virtual object @object {
            get {
                return _object;
            }
            set {
                if(_object != value)
{
object ov = _object;
_object = value;
OnParametersChangedInternal("object", ov, value);
};
            }
        }
        
        [Browsable(true)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        [Description("Object of type System.String. Specify a new or existing object reference.")]
        [Category("ReturnValue")]
        public virtual string BeginInvoke_rv {
            get {
                return _BeginInvoke_rv;
            }
            set {
                _BeginInvoke_rv = value;
            }
        }
        
        public override string Parameters {
            get {
                StringBuilder sb = new StringBuilder();
sb.Append("(");
sb.Append(null != _param1 ? ( !_param1.ToString().StartsWith("&") && _param1.GetType().Equals(typeof(string)) ? "\"" + _param1.ToString() + "\"" : _param1.ToString()) : "null");
sb.Append(", ");
sb.Append(null != _callback ? ( !_callback.ToString().StartsWith("&") && _callback.GetType().Equals(typeof(string)) ? "\"" + _callback.ToString() + "\"" : _callback.ToString()) : "null");
sb.Append(", ");
sb.Append(null != _object ? ( !_object.ToString().StartsWith("&") && _object.GetType().Equals(typeof(string)) ? "\"" + _object.ToString() + "\"" : _object.ToString()) : "null");
sb.Append(")");
return sb.ToString();
            }
        }
        
        private void _Init() {
            Name = "BeginInvoke";
            myTypeRefs = new Dictionary<string, Type>();
Type[] paramTypes = new Type[] { typeof(System.String), typeof(System.AsyncCallback), typeof(System.Object)};			ParameterModifier pm = new ParameterModifier(3);
			ParameterModifier[] paramModifiers = new ParameterModifier[] { pm };
pm[0] = false;
myTypeRefs.Add("param1", typeof(System.String));
pm[1] = false;
myTypeRefs.Add("callback", typeof(System.AsyncCallback));
pm[2] = false;
myTypeRefs.Add("object", typeof(System.Object));

;
            Action = typeof(SampleLib.MyDelegate).GetMethod("BeginInvoke", BindingFlags.Public | BindingFlags.Instance, null, paramTypes, paramModifiers);
            InstanceType = typeof(SampleLib.MyDelegate);;
        }
    }
}
