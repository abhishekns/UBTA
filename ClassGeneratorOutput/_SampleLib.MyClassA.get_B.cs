//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _SampleLib.MyClassA {
    using System;
    using System.ComponentModel;
    using ubta.Reflection;
    using System.Text;
    using System.Linq;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Workflow.ComponentModel;
    using System.Workflow.ComponentModel.Design;
    
    
    [Serializable()]
    [TypeConverter(typeof(ExpandableObjectConverter))]
    [Designer("ubta.UseCase.Designer.UseCaseDesigner")]
    public class get_B : ubta.UseCase.DefaultActivity {
        
        private System.Collections.Generic.Dictionary<string, System.Type> myTypeRefs;
        
        [NonSerialized()]
        private string _get_B_rv;
        
        public get_B() {
            _Init();
        }
        
        public get_B(System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext sc) {
            _Init();
        }
        
        [Browsable(true)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        [Description("Object of type System.String. Specify a new or existing object reference.")]
        [Category("ReturnValue")]
        public virtual string get_B_rv {
            get {
                return _get_B_rv;
            }
            set {
                _get_B_rv = value;
            }
        }
        
        public override string Parameters {
            get {
                StringBuilder sb = new StringBuilder();
sb.Append("(");
sb.Append(")");
return sb.ToString();
            }
        }
        
        private void _Init() {
            Name = "get_B";
            myTypeRefs = new Dictionary<string, Type>();
Type[] paramTypes = new Type[] { };			ParameterModifier[] paramModifiers = null;

;
            Action = typeof(SampleLib.MyClassA).GetMethod("get_B", BindingFlags.Public | BindingFlags.Instance, null, paramTypes, paramModifiers);
            InstanceType = typeof(SampleLib.MyClassA);;
        }
    }
}
