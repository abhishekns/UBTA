<?xml version="1.0"?>
<xs:schema xmlns:u="http://www.usecasetests.com/ubta.Schema" xmlns:t="http://www.usecasetests.com/ubta.Assert" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.usecasetests.com/ubta.Assert" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import schemaLocation="ubta.Schema.xsd" namespace="http://www.usecasetests.com/ubta.Schema" />
  <xs:element name="ubta.Assert.Assert" type="t:ubta.Assert.Assert" />
  <xs:complexType name="ubta.Assert.Assert">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="That">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="arg_in">
              <xs:complexType mixed="true">
                <xs:attribute fixed="System.Object" ref="u:ParamType" />
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="In" ref="u:ParamCategory" />
                <xs:attribute default="ByValue" ref="u:ParamValueType" use="required" />
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="That_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.IValueChecker" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Constructor">
        <xs:complexType />
      </xs:element>
    </xs:choice>
    <xs:attribute name="Name" type="u:System.String" use="required" />
  </xs:complexType>
  <xs:element name="ubta.Assert.ICondition" type="t:ubta.Assert.ICondition" />
  <xs:complexType name="ubta.Assert.ICondition">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Evaluate">
        <xs:complexType>
          <xs:choice>
            <xs:element minOccurs="0" name="Evaluate_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="u:System.Boolean" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Name" type="u:System.String" use="required" />
  </xs:complexType>
  <xs:element name="ubta.Assert.IValueChecker" type="t:ubta.Assert.IValueChecker" />
  <xs:complexType name="ubta.Assert.IValueChecker">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="AssertCondition">
        <xs:complexType>
          <xs:choice>
            <xs:element minOccurs="0" name="AssertCondition_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.ICondition" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="Or">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="o">
              <xs:complexType mixed="true">
                <xs:attribute fixed="System.Object" ref="u:ParamType" />
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="In" ref="u:ParamCategory" />
                <xs:attribute default="ByValue" ref="u:ParamValueType" use="required" />
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="Or_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.IValueChecker" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="set_DelayedEvaluation">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="value">
              <xs:complexType mixed="true">
                <xs:attribute fixed="System.Boolean" ref="u:ParamType" />
                <xs:attribute name="Name" type="u:System.String" use="optional" />
                <xs:attribute name="Value" type="u:System.Boolean" use="optional" />
                <xs:attribute fixed="In" ref="u:ParamCategory" />
                <xs:attribute default="ByValue" ref="u:ParamValueType" use="required" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsEqualTo">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="p">
              <xs:complexType mixed="true">
                <xs:attribute fixed="System.Object" ref="u:ParamType" />
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="In" ref="u:ParamCategory" />
                <xs:attribute default="ByValue" ref="u:ParamValueType" use="required" />
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="IsEqualTo_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.ICondition" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AreNotEqualTo">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="p">
              <xs:complexType mixed="true">
                <xs:attribute fixed="System.Object" ref="u:ParamType" />
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="In" ref="u:ParamCategory" />
                <xs:attribute default="ByValue" ref="u:ParamValueType" use="required" />
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="AreNotEqualTo_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.ICondition" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsGreaterThan">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="p">
              <xs:complexType mixed="true">
                <xs:attribute fixed="System.IComparable:System.IComparable" ref="u:ParamType" />
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="In" ref="u:ParamCategory" />
                <xs:attribute default="ByValue" ref="u:ParamValueType" use="required" />
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="IsGreaterThan_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.ICondition" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsNull">
        <xs:complexType>
          <xs:choice>
            <xs:element minOccurs="0" name="IsNull_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.ICondition" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="AreNotNull">
        <xs:complexType>
          <xs:choice>
            <xs:element minOccurs="0" name="AreNotNull_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.ICondition" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="get_EvaluationResult">
        <xs:complexType>
          <xs:choice>
            <xs:element minOccurs="0" name="get_EvaluationResult_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="u:System.Boolean" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="get_DelayedEvaluation">
        <xs:complexType>
          <xs:choice>
            <xs:element minOccurs="0" name="get_DelayedEvaluation_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="u:System.Boolean" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="AreNull">
        <xs:complexType>
          <xs:choice>
            <xs:element minOccurs="0" name="AreNull_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.ICondition" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="Is">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="type">
              <xs:complexType mixed="true">
                <xs:attribute fixed="System.Type" ref="u:ParamType" />
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="In" ref="u:ParamCategory" />
                <xs:attribute default="ByValue" ref="u:ParamValueType" use="required" />
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="Is_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.ICondition" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="And">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="o">
              <xs:complexType mixed="true">
                <xs:attribute fixed="System.Object" ref="u:ParamType" />
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="In" ref="u:ParamCategory" />
                <xs:attribute default="ByValue" ref="u:ParamValueType" use="required" />
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="And_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.IValueChecker" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsNotEqualTo">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="p">
              <xs:complexType mixed="true">
                <xs:attribute fixed="System.Object" ref="u:ParamType" />
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="In" ref="u:ParamCategory" />
                <xs:attribute default="ByValue" ref="u:ParamValueType" use="required" />
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="IsNotEqualTo_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.ICondition" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Nand">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="o">
              <xs:complexType mixed="true">
                <xs:attribute fixed="System.Object" ref="u:ParamType" />
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="In" ref="u:ParamCategory" />
                <xs:attribute default="ByValue" ref="u:ParamValueType" use="required" />
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="Nand_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.IValueChecker" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AreEqualTo">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="p">
              <xs:complexType mixed="true">
                <xs:attribute fixed="System.Object" ref="u:ParamType" />
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="In" ref="u:ParamCategory" />
                <xs:attribute default="ByValue" ref="u:ParamValueType" use="required" />
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="AreEqualTo_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.ICondition" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AreGreaterThan">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="p">
              <xs:complexType mixed="true">
                <xs:attribute fixed="System.IComparable:System.IComparable" ref="u:ParamType" />
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="In" ref="u:ParamCategory" />
                <xs:attribute default="ByValue" ref="u:ParamValueType" use="required" />
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="AreGreaterThan_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.ICondition" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Are">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="type">
              <xs:complexType mixed="true">
                <xs:attribute fixed="System.Type" ref="u:ParamType" />
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="In" ref="u:ParamCategory" />
                <xs:attribute default="ByValue" ref="u:ParamValueType" use="required" />
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="Are_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.ICondition" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsLessThan">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="p">
              <xs:complexType mixed="true">
                <xs:attribute fixed="System.IComparable:System.IComparable" ref="u:ParamType" />
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="In" ref="u:ParamCategory" />
                <xs:attribute default="ByValue" ref="u:ParamValueType" use="required" />
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="IsLessThan_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.ICondition" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsNotNull">
        <xs:complexType>
          <xs:choice>
            <xs:element minOccurs="0" name="IsNotNull_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.ICondition" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="AreLessThan">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="p">
              <xs:complexType mixed="true">
                <xs:attribute fixed="System.IComparable:System.IComparable" ref="u:ParamType" />
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="In" ref="u:ParamCategory" />
                <xs:attribute default="ByValue" ref="u:ParamValueType" use="required" />
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="AreLessThan_rv">
              <xs:complexType>
                <xs:attribute name="Name" type="u:System.String" use="required" />
                <xs:attribute fixed="t:ubta.Assert.ICondition" name="Type" type="u:System.String" use="optional" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Name" type="u:System.String" use="required" />
  </xs:complexType>
</xs:schema>